#!/usr/bin/env node

"use strict";

var semver = require('semver')
var program = require('commander')
var path = require('path')
var fs = require('fs')
var tar = require('tar')
var zlib = require('zlib')
var fstream = require('fstream')
var Packer = require('fstream-npm')
var request = require('request')
var debug = require('debug')('mosaic:publish')
var mosaic = require('../lib/mosaic')

var MOPATH_PATTERN = /([^\/]+)\/([^\/]+)\/((?:\d+\.){2}\d+(?:-[^\/]+)?)$/


program.parse(process.argv)

var args = program.args
var cwd = process.cwd()
var fpath = cwd

if (args[0]) fpath = path.normalize(cwd, args[0])

var mopath = path.join(fpath, 'mosaic.json')

if (!fs.existsSync(mopath)) debug('没找到 mosaic.json')

var mo = require(mopath)

if (isValid(mo)) {
  publish(fpath)
}


function publish(fpath){
  new Packer({ path: fpath, type: 'Directory', isDirectory: true })
    .pipe(tar.Pack())
    .pipe(zlib.Gzip())
    .pipe(fstream.Writer('mosaic.tgz'))
    .on('close', afterTar)
}

function afterTar(err) {
  var parts = mo.name.split(/\//)
  var ns = parts[0]
  var name = parts[1]
  var url = [mosaic.get('daemon'), 'api', ns , name, mo.version ].join('\/')

  post()

  function post(overwrite){
    var r = request.post(url, callback)
    var form = r.form()

    if (overwrite) form.append('overwrite', 'y')

    form.append('tarball', fs.createReadStream('mosaic.tgz'))
  }

  function callback(err, res, body) {
    if (err) {
      return debug(err)
    }

    var statusCode = res.statusCode

    if (statusCode === 205) {
      mosaic.question('Files already exist on server,overwrite?(y\/n): ', function(answer) {
        answer = answer.toLowerCase().trim()

        if (answer === 'y') {
          post('y')
        }
        else if (answer === 'n') {
          process.exit(0)
        }
        else {
          this.redo()
        }
      })
    }
    else {
      var data = JSON.parse(body)

      debug(statusCode + ': ' + data.success || data.error)
    }
  }
}

function isValid(mo){
  var name = mo.name
  var version = .version
  var valid = true

  function fail(msg) {
    valid = false
    debug(msg)
  }

  if (!name) fail('未填写名称')
  if (!version) fail('未填写版本')

  if (!semver.valid(version)) fail('版本 ' + version + ' 不合规范')

  return valid
}
